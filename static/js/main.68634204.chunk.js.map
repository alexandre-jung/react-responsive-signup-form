{"version":3,"sources":["components/Input.tsx","components/SubmitButton.tsx","components/FormIllustration.tsx","components/SignupForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Input","props","handleChange","event","setState","value","target","onChange","state","this","isValid","id","type","label","required","compact","placeholder","className","undefined","htmlFor","getInputValidState","React","Component","SubmitButton","FormIllustration","src","alt","defaultProps","_","SignupForm","handleSubmit","alert","preventDefault","updatePassword","password","updatePasswordCheck","passwordCheck","length","validatePassword","validatePasswordCheck","title","onSubmit","renderPasswordField","renderPasswordCheckField","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68634204.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ninterface InputProps {\r\n    id: string,\r\n    type: string,\r\n    label: string,\r\n    required: boolean,\r\n    compact: boolean,\r\n    placeholder: string,\r\n    isValid: boolean | null,\r\n    onChange: (password: string) => void,\r\n}\r\n\r\ninterface InputState {\r\n    value: string,\r\n}\r\n\r\nexport default class Input extends React.Component<InputProps, InputState> {\r\n\r\n    static defaultProps = {\r\n        type: 'text',\r\n        label: '',\r\n        required: false,\r\n        compact: false,\r\n        placeholder: '',\r\n        isValid: null,\r\n        onChange: (_: string) => { },\r\n    }\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    public constructor(props: InputProps) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Handle changes on the input\r\n     */\r\n    protected handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n\r\n        // Do something before state update\r\n        // ...\r\n\r\n        this.setState({\r\n            value: event.target.value,\r\n        }, () => {\r\n            // Do something after state update\r\n            this.props.onChange(this.state.value);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get the class for the valid-invalid prop\r\n     */\r\n    protected getInputValidState(): string {\r\n        if (this.props.isValid === null)\r\n            return '';\r\n        if (this.props.isValid)\r\n            return ' is-valid ';\r\n        return ' is-invalid ';\r\n    }\r\n\r\n    /**\r\n     * Render this component\r\n     */\r\n    public render(): React.ReactNode {\r\n        let {\r\n            id,\r\n            type,\r\n            label,\r\n            required,\r\n            compact,\r\n            placeholder\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className={\"form-group col-12 my-2\" + (compact ? ' col-md-6' : undefined)}>\r\n                <label htmlFor={id} className={!this.props.required ? 'optional' : undefined}>{label}</label>\r\n                <input type={type} id={id}\r\n                    className={'form-control' + this.getInputValidState()}\r\n                    onChange={this.handleChange}\r\n                    value={this.state.value}\r\n                    placeholder={placeholder}\r\n                    required={required} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export default function SubmitButton(props: { value: string }) {\r\n    return (\r\n        <div className=\"form-group mt-2\">\r\n            <button type='submit' className='btn btn-warning'>{props.value}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nSubmitButton.defaultProps = {\r\n    value: 'Envoyer',\r\n};\r\n","export default function FormIllustration() {\r\n    return (\r\n        <header>\r\n            <img className='d-none d-lg-block' src=\"https://picsum.photos/1000/1000\" alt=\"Header\" />\r\n            <img className='d-block d-lg-none' src=\"https://picsum.photos/600/250\" alt=\"Header\" />\r\n        </header>\r\n    );\r\n}\r\n","import React, { FormEvent, ReactNode } from \"react\";\r\nimport Input from \"./Input\";\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport FormIllustration from './FormIllustration';\r\n\r\ninterface SignupFormProps {\r\n    title: string,\r\n}\r\n\r\ninterface SignupFromState {\r\n    password: string,\r\n    passwordCheck: string,\r\n}\r\n\r\nexport default class SignupForm extends React.Component<SignupFormProps, SignupFromState> {\r\n\r\n    static defaultProps = {\r\n        title: '',\r\n    }\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    public constructor(props: SignupFormProps) {\r\n        super(props);\r\n        this.state = {\r\n            password: '',\r\n            passwordCheck: '',\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle the form submitting\r\n     */\r\n    protected handleSubmit = (event: FormEvent<HTMLFormElement>): void => {\r\n\r\n        // The form is being submitted\r\n        // ...\r\n        alert('Le formulaire a été soumis');\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Update the password value\r\n     */\r\n    protected updatePassword = (password: string): void => {\r\n        this.setState({ password });\r\n    }\r\n\r\n    /**\r\n     * Update the password verification value\r\n     */\r\n    protected updatePasswordCheck = (passwordCheck: string): void => {\r\n        this.setState({ passwordCheck });\r\n    }\r\n\r\n    /**\r\n     * Check the password and return a boolean or null if empty\r\n     */\r\n    protected validatePassword(): boolean | null {\r\n        let { password } = this.state;\r\n        return password ? password.length >= 8 : null;\r\n    }\r\n\r\n\r\n    /**\r\n     * Check wether the password verification matches the password\r\n     * and return a boolean or null if empty\r\n     */\r\n    protected validatePasswordCheck(): boolean | null {\r\n        let { password, passwordCheck } = this.state;\r\n        return passwordCheck ? passwordCheck === password : null;\r\n    }\r\n\r\n    /**\r\n     * Render the password field\r\n     */\r\n    protected renderPasswordField(): ReactNode {\r\n        return (\r\n            <Input id='password'\r\n                type='password'\r\n                label='Mot de passe'\r\n                placeholder='Au moins 8 caractères'\r\n                isValid={this.validatePassword()}\r\n                onChange={this.updatePassword}\r\n                required compact />\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Render the password verification field\r\n     */\r\n    protected renderPasswordCheckField(): ReactNode {\r\n        return (\r\n            <Input id='passwordCheck'\r\n                type='password'\r\n                label='Vérifiez le mot de passe'\r\n                onChange={this.updatePasswordCheck}\r\n                isValid={this.validatePasswordCheck()}\r\n                required compact />\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Render this component\r\n     */\r\n    public render(): ReactNode {\r\n        let { title } = this.props;\r\n        return (\r\n            <div className=\"d-flex form rounded shadow mx-auto overflow-hidden flex-column flex-lg-row\" id='signup'>\r\n                <FormIllustration />\r\n                <form className='justify-content-center p-4 container-fluid' onSubmit={this.handleSubmit}>\r\n                    <div className=\"row\">\r\n                        <h2 className='fw-bold mb-4'>{title}</h2>\r\n                        <Input id='lastName' type='text' label='Nom' placeholder='Dupont' compact />\r\n                        <Input id='firstName' type='text' label='Prénom' placeholder='Jean' compact />\r\n                        <Input id='email' type='email' label='Email' placeholder='jean-dupont@gmail.com' required />\r\n                        {this.renderPasswordField()}\r\n                        {this.renderPasswordCheckField()}\r\n                        <small className='form-text text-muted mt-3'>Les champs marqués d'un * sont obligatoires</small>\r\n                        <SubmitButton value='Inscription' />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import SignupForm from './components/SignupForm';\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App container my-5\">\n            <SignupForm title='Inscrivez-vous' />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}